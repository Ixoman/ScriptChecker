//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/sdqsa/source/repos/SqlScriptChecker/SqlScriptChecker/SQL.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISQLListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class SQLBaseListener : ISQLListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.sql"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSql([NotNull] SQLParser.SqlContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.sql"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSql([NotNull] SQLParser.SqlContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] SQLParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] SQLParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.updateStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUpdateStatement([NotNull] SQLParser.UpdateStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.updateStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUpdateStatement([NotNull] SQLParser.UpdateStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.deleteStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeleteStatement([NotNull] SQLParser.DeleteStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.deleteStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeleteStatement([NotNull] SQLParser.DeleteStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.selectStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectStatement([NotNull] SQLParser.SelectStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.selectStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectStatement([NotNull] SQLParser.SelectStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.tableName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTableName([NotNull] SQLParser.TableNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.tableName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTableName([NotNull] SQLParser.TableNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.columnAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumnAssignment([NotNull] SQLParser.ColumnAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.columnAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumnAssignment([NotNull] SQLParser.ColumnAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] SQLParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] SQLParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.joinTable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoinTable([NotNull] SQLParser.JoinTableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.joinTable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoinTable([NotNull] SQLParser.JoinTableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.whereClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhereClause([NotNull] SQLParser.WhereClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.whereClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhereClause([NotNull] SQLParser.WhereClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition([NotNull] SQLParser.ConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition([NotNull] SQLParser.ConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.comparisonOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonOperator([NotNull] SQLParser.ComparisonOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.comparisonOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonOperator([NotNull] SQLParser.ComparisonOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.logicalOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalOperator([NotNull] SQLParser.LogicalOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.logicalOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalOperator([NotNull] SQLParser.LogicalOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.columnList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumnList([NotNull] SQLParser.ColumnListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.columnList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumnList([NotNull] SQLParser.ColumnListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue([NotNull] SQLParser.ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue([NotNull] SQLParser.ValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] SQLParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] SQLParser.FunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.arithmeticOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArithmeticOperator([NotNull] SQLParser.ArithmeticOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.arithmeticOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArithmeticOperator([NotNull] SQLParser.ArithmeticOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.joinType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoinType([NotNull] SQLParser.JoinTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.joinType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoinType([NotNull] SQLParser.JoinTypeContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
